@startuml
title Farkle – Combined Use Case Diagram (with Scenario Details)

left to right direction
skinparam packageStyle rectangle
actor Player

rectangle "Farkle Game System" {

  () "Create Game"      as UC_Create
  () "Configure Rules"  as UC_Config
  () "Play Turn"        as UC_Play
  () "Calculate Score"  as UC_Calc
  () "End Turn"         as UC_EndTurn
  () "End Game"         as UC_EndGame

  ' Core relations
  Player --> UC_Create
  Player --> UC_Config
  Player --> UC_Play

  UC_Play --> UC_Calc : <<include>>
  UC_Play ..> UC_EndTurn : <<extend>>\n(bank / farkle / auto-bank)
  UC_Play ..> UC_EndGame : <<extend>>\n(reaches target)

  ' -- Scenario highlights as notes (condensed) --
  note right of UC_Create
    Preconditions: App launched
    Trigger: Start new match
    Success: Game session created
    Post: Ready to play
  end note

  note right of UC_Config
    Trigger: Player sets options
    Success: Save Target Score, Hot Dice
    Post: Rules stored on Game
  end note

  note bottom of UC_Play
    Preconditions: Game in progress, player's turn
    Main Flow:
      1) Roll up to remaining dice
      2) Show results
      3) <<include>> Calculate Score
      4) Player chooses: bank or roll again
    Alternate:
      - Farkle: no scoring dice → <<extend>> End Turn
      - All dice used & Hot Dice OFF → Auto-bank → <<extend>> End Turn
      - All dice used & Hot Dice ON  → Reset pool, continue
    Post: Points banked or lost
  end note

  note right of UC_Calc
    Trigger: After a roll
    Success:
      - Score triples+ first (4/5/6-kind multipliers)
      - Then single 1s (100) & 5s (50)
      - Return (points, used)
    Post: Turn score updated
  end note

  note right of UC_EndTurn
    Trigger: Player banks OR Farkle OR Auto-bank
    Success:
      - Add tentative to total (0 on Farkle)
      - Update scoreboard
      - Next player
  end note

  note right of UC_EndGame
    Trigger: Any player total ≥ Target Score
    Success:
      - Announce winner & final scores
      - Optionally offer rematch
  end note
}

@enduml
